Index: standard.mk
===================================================================
diff --git a/standard.mk b/standard.mk
deleted file mode 100644
--- a/standard.mk	(revision 051893218f3a279d5323a3d95bfaa06958b6f8b9)
+++ /dev/null	(revision 051893218f3a279d5323a3d95bfaa06958b6f8b9)
@@ -1,47 +0,0 @@
-# Validate variables in project.mk exist
-ifndef IMAGE_REGISTRY
-$(error IMAGE_REGISTRY is not set; check project.mk file)
-endif
-ifndef IMAGE_REPOSITORY
-$(error IMAGE_REPOSITORY is not set; check project.mk file)
-endif
-ifndef IMAGE_NAME
-$(error IMAGE_NAME is not set; check project.mk file)
-endif
-
-# Generate version and tag information from inputs
-CURRENT_COMMIT=$(shell git rev-parse --short=7 HEAD)
-INITIAL_COMMIT=$(shell git rev-list --max-parents=0 HEAD)
-COMMIT_NUMBER=$(shell git rev-list $(INITIAL_COMMIT)..HEAD --count)
-IMAGE_VERSION=$(COMMIT_NUMBER)-$(CURRENT_COMMIT)
-
-IMAGE_URI=$(IMAGE_REGISTRY)/$(IMAGE_REPOSITORY)/$(IMAGE_NAME)
-IMAGE_URI_VERSION=$(IMAGE_URI):v$(IMAGE_VERSION)
-IMAGE_URI_LATEST=$(IMAGE_URI):latest
-
-CONTAINER_ENGINE=$(shell command -v podman 2>/dev/null || command -v docker 2>/dev/null)
-
-.PHONY: isclean
-isclean:
-	@(test "$(ALLOW_DIRTY_CHECKOUT)" != "false" || test 0 -eq $$(git status --porcelain | wc -l)) || (echo "Local git checkout is not clean, commit changes and try again." >&2 && exit 1)
-
-.PHONY: containerbuild
-containerbuild: isclean
-	$(CONTAINER_ENGINE) build build --tag $(IMAGE_URI_VERSION)
-	$(CONTAINER_ENGINE) tag $(IMAGE_URI_VERSION) $(IMAGE_URI_LATEST)
-
-.PHONY: push
-push:
-	$(CONTAINER_ENGINE) push $(IMAGE_URI_VERSION)
-	$(CONTAINER_ENGINE) push $(IMAGE_URI_LATEST)
-
-.PHONY: skopeo-push
-skopeo-push: containerbuild
-	skopeo copy \
-		--dest-creds "${QUAY_USER}:${QUAY_TOKEN}" \
-		"docker-daemon:${IMAGE_URI_VERSION}" \
-		"docker://${IMAGE_URI_VERSION}"
-	skopeo copy \
-		--dest-creds "${QUAY_USER}:${QUAY_TOKEN}" \
-		"docker-daemon:${IMAGE_URI_LATEST}" \
-		"docker://${IMAGE_URI_LATEST}"
\ No newline at end of file
Index: boilerplate/generated-includes.mk
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boilerplate/generated-includes.mk b/boilerplate/generated-includes.mk
new file mode 100644
--- /dev/null	(date 1651783392669)
+++ b/boilerplate/generated-includes.mk	(date 1651783392669)
@@ -0,0 +1,6 @@
+# THIS FILE IS GENERATED BY BOILERPLATE. DO NOT EDIT.
+# This file automatically includes any *.mk files in your subscribed
+# conventions. Please ensure your base Makefile includes only this file.
+include boilerplate/_lib/boilerplate.mk
+include boilerplate/openshift/golang-lint/standard.mk
+include boilerplate/openshift/golang-codecov/standard.mk
Index: Makefile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>default: build\n\n#include boilerplate/generated-includes.mk\n\nSHELL := /usr/bin/env bash\n\n# Include shared Makefiles\ninclude project.mk\ninclude standard.mk\n\n# Extend Makefile after here\n\nGOFLAGS=-mod=mod\n\n.PHONY: build\nbuild:\n\tgo fmt ./...\n\tgo mod tidy\n\tgo build $(GOFLAGS) .\n\n.PHONY: test\ntest:\n\tgo test $(GOFLAGS) ./...\n\n.PHONY: build-push\nbuild-push:\n\thack/app_sre_build_push.sh $(IMAGE_URI_VERSION)\n\n.PHONY: boilerplate-update\nboilerplate-update:\n\t@boilerplate/update\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Makefile b/Makefile
--- a/Makefile	(revision 051893218f3a279d5323a3d95bfaa06958b6f8b9)
+++ b/Makefile	(date 1651783396250)
@@ -1,15 +1,35 @@
 default: build
 
-#include boilerplate/generated-includes.mk
+include boilerplate/generated-includes.mk
 
 SHELL := /usr/bin/env bash
 
 # Include shared Makefiles
 include project.mk
-include standard.mk
+
 
 # Extend Makefile after here
 
+DOCKERFILE := ./Dockerfile
+
+# Podman by default, fall back to docker, allow override
+CONTAINER_ENGINE ?= $(shell command -v podman 2>/dev/null || command -v docker 2>/dev/null)
+
+# Gather commit number for Z and short SHA
+COMMIT_NUMBER := $(shell git rev-list `git rev-list --parents HEAD | egrep "^[a-f0-9]{40}$$"`..HEAD --count)
+CURRENT_COMMIT := $(shell git rev-parse --short=7 HEAD)
+
+# Build container version
+VERSION_MAJOR ?= 0
+VERSION_MINOR ?= 1
+IMAGE_VERSION := $(VERSION_MAJOR).$(VERSION_MINOR).$(COMMIT_NUMBER)-$(CURRENT_COMMIT)
+
+IMAGE_URI_BASE := $(IMAGE_REGISTRY)/$(IMAGE_USER)/$(IMAGE_NAME)
+IMAGE_URI_LATEST=$(IMAGE_URI_BASE):latest
+IMAGE_URI := $(IMAGE_URI_BASE):v$(IMAGE_VERSION)
+# Used by deploy.sh
+export IMAGE_URI
+
 GOFLAGS=-mod=mod
 
 .PHONY: build
@@ -22,10 +42,21 @@
 test:
 	go test $(GOFLAGS) ./...
 
-.PHONY: build-push
-build-push:
-	hack/app_sre_build_push.sh $(IMAGE_URI_VERSION)
+.PHONY: image-push
+image-push:
+	${CONTAINER_ENGINE} push $(IMAGE_URI)
+	${CONTAINER_ENGINE} push $(IMAGE_URI_LATEST)
 
 .PHONY: boilerplate-update
 boilerplate-update:
 	@boilerplate/update
+
+.PHONY: image-build
+image-build: build
+	${CONTAINER_ENGINE} build . -f $(DOCKERFILE) -t $(IMAGE_URI)
+	${CONTAINER_ENGINE} tag $(IMAGE_URI) $(IMAGE_URI_LATEST)
+
+
+.PHONY: deploy
+deploy:
+	hack/deploy.sh
\ No newline at end of file
